<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[Hexo+Github Pages搭建博客]]></title>
    <url>%2F2017%2F11%2F08%2FHexo%2BGithub%20Pages%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%2F</url>
    <content type="text"><![CDATA[安装、配置安装Node.js下载Node.js，根据自己的操作系统选择版本，Windows下载 Windows Installer (.msi)，安装一路【下一步】，没有什么可选的，最多选下安装位置。 安装Git下载Git，安装也一路【下一步】吧。安装完成后，在桌面上空白处点击鼠标右键，可以看到 Git Bash Here。如果你已经安装了，就不需要再安装和配置。 1234##设置Git的用户名，不一定非得填注册Git的用户名，随便填，只是一个用户标识git config --global user.name &quot;user_name&quot;##设置Git的邮件，不一定非得填注册Git的邮箱，随便填，只是一个用户标识git config --global user.email &quot;your_email@example.com&quot; 安装、配置Hexo介于国内的网络环境，建议先安装cnpm，之后所有的npm命令都用cnpm代替，在国内直接用npm的话，可能无法连接到npm源，导致无法下载，现象是卡在某处一直没有反应。 任意空白处点击鼠标右键，选择 Git Bash Here 进入Git命令框。 新建一个文件夹，如 D:\Hexo，进入这个文件夹，空白处点击鼠标右键，选择 Git Bash Here 进入Git命令框，执行以下命令： 1234567## 安装cnpm 之后所有的npm命令都用cnpm代替npm install -g cnpm --registry=https://registry.npm.taobao.org## 安装hexonpm install hexo-cli -ghexo i 或 hexo initnpm install 本地测试Hexo12## 生成静态页面（需要Node.js支持，之前已安装）hexo g 或 hexo generate 12## 启动Hexo本地服务，如果要停止服务，按 Crtl+Chexo s 或 hexo server 打开浏览器，输入：http://localhost:4000/ 如果可以看到以下页面，那么Hexo就已经安装完成了。 新建文章在Hexo主目录下，任意空白处点击鼠标右键，选择 Git Bash Here 进入Git命令框（如 D:\Hexo），输入以下命令： 12##新建文章hexo n 新文章 或 hexo new 新文章 就会在 D:\Hexo\source\_posts 下生成一个名为新文章.md的文件，这是一个Markdown文件，我们可以编辑它，Markdown语法自行百度。 重新生成页面并启动，就可以看到你新建的文章了。 1234## 生成静态页面（需要Node.js，之前已安装）hexo g## 启动Hexos本地服务hexo s Markdown软件推荐这里强烈推荐一下Typora这款软件（太好用了，用来书写Markdown根本就停不下来，这里有两个它的介绍：Typora - 颠覆写作体验的免费极简 Markdown 编辑器！好用的 MD 格式阅读器 让 Markdown 写作更简单，免费极简编辑器：Typora）。另外Windows下还有markdownpad 2，有官方中文版本。支持实时预览，不过好像只支持传统的Markdown语法，对我这种经常要用到表格（表格是扩展Markdown语法）的用户来说，就不太能满足需求了。（第一次用markdownpad可能会遇到无法预览甚至无响应的问题，这个问题的解决方案要文章最后有说明） 新建Github代码仓库点击右上角的 + 号，选择 New repository，Repository name 填 用户名.github.io.git（用户名必须为你的Github用户名） ， Description 随便填，最后点击 Create reposotory。 记录下HTTPS地址：https://github.com/用户名/用户名.github.io.git，发布时会用到。 发布到GitHub Page配置Hexo的发布地址到Hexo主目录下（如 D\:Hexo），找到并打开：_config.yml 在文件最后找到：deploy节点，按照下面内容填（repository填写上面复制的HTTPS地址） 部署到Git的时候是按这个地址部署的。 12345deploy: type: git ##https://用户名:密码@仓库地址 repository: https://用户名:密码@github.com/用户名/用户名.github.io.git branch: master 生成静态文件并部署到Github必须进行Hexo主目录 （如 D:\Hexo）下，在空白处右击鼠标右键，选择 Git Bash Here 进入Git命令窗口，执行以下命令 123456## 生成静态文件hexo g## 调用Git部署hexo静态文件到Git代码库（需要Git支持，之前已安装，并且需要配置Git，之前也已经配置了）hexo d## 以上两个命令可以合并为hexo g -d 这个时候应该报一个错误。需要安装一个名为hexo-deployer-git的插件，执行以下命令安装。 1npm install hexo-deployer-git --save 安装成功后再执行hexo d，最后出现 INFO Deploy done: git 代表部署成功了。 访问博客打开浏览器，输入http://+之前在新建代码仓库时的仓库名称，如：http://用户名.github.io，就可以看到你的博客了。 域名绑定创建CNAME在Hexo主目录下的source文件夹（如：D:\Hexo\source）下新建文件CNAME（注意：无后缀名），内容就写你的域名（如：www.abcd.com），再重新部署。 配置DNS解析需要在域名解析中设置，如果你在阿里云（万网）上购买的域名，可在阿里云控制台中设置。进入【域名与网站（万网）】-【云解析DNS】-【域名解析】-【域名列表】选择你要设置的域名，这里介绍两种配置： 将域名指向一个IP地址记录类型：A主机记录：www记录值：你的GitHub Page的IP 将域名指向另一个域名记录类型：CNAME主机记录：www记录值：你的GitHub Page的地址 主机记录也可以填二级域名，当然，随之的在CNAME文件中也要填写相同的二级域名 增加搜索功能这里介绍的是最简单的本地站内搜索。 安装 hexo-generator-searchdb插件在站点的根目录下执行以下命令： 1npm install hexo-generator-searchdb --save 配置 站点配置文件在Hexo根目录下的_config.yml中新增以下内容到任意位置： 12345search: path: search.xml field: post format: html limit: 10000 配置 主题配置文件搜索主题下的_config.yml打到local_search 123# Local searchlocal_search: enable: true 问题汇总markdownpad无法预览解决办法上面提到的第一次用markdownpad可能会遇到无法预览甚至无响应的问题，表现如下图。可以下载并安装awesomium_v1.6.6_sdk_win.exe，就可以解决。 执行hexo d出现warning: LF will be replaced by CRLF ...的解决办法12345678## 更改git配置git config --global core.autocrlf false## 清理hexohexo clean## 重新生成静态文件hexo g## 重新部署hexo静态文件到Git代码库hexo d 其它Hexo还有很多主题和插件，还可以与自己的域名进行绑定，感兴趣的同学可以上网了解一下。]]></content>
      <tags>
        <tag>Hexo</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2017%2F11%2F01%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
  </entry>
</search>
